spring.profiles=dev
server.port=7006
server.servlet.context-path=/
spring.application.name=my-provider
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springcloud?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#spring.datasource.schema=classpath:sql/book.sql
#spring.datasource.schema=classpath:sql/book.sql
#spring.datasource.initialization-mode=never

#配置mybatis
mybatis.type-aliases-package=com.aaa.springcloud.model
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
logging.level.com.aaa.springcloud.mapper=debug

#zipkin配置
# 配置zipkin服务器端的IP地址以及端口号
#spring.zipkin.base-url=http://localhost:5081
# 调用链式采集样率
#spring.sleuth.sampler.probability=1.0

#配置eureka连接
eureka.client.service-url.defaultZone=http://eureka01:6001/eureka,http://eureka02:6002/eureka,http://eureka03:6003/eureka
eureka.instance.instance-id=provider-7006

# 鼠标悬浮所显示的不再是hostname，而是ip地址(只是细节问题)，可以非常清晰的直接看到该服务所对应的服务器的ip地址是谁
eureka.instance.prefer-ip-address=true

info.name=provider-7006
info.port=7006
info.author=Mr.Yu
info.company.name=AAA

# 失效eureka的自我保护
# 先配置provider向eureka的发送心跳的时间
# eureka.instance.lease-renewal-interval-in-seconds=10
# provider要告诉eureka多久之后还没有接收到心跳直接把我剔除
# eureka.instance.lease-expiration-duration-in-seconds=15

# 实现项目启动自动向mysql数据库去生成表和数据(初始化数据库)
# 找到所需要执行的SQL文件(classpath:sql/qy_all.sql)
# 在springboot官网说明schema只是初始化表和表结构用的，并不建议初始化数据
# schema不但可以初始化表结构也可以初始化数据(官方只是不推荐这么用)
#spring.datasource.schema=classpath:sql/qy_all.sql
# 初始化数据
# spring.datasource.data=
# 项目第一次启动才会去初始化数据库--->项目启动后就有用户开始注册,下单...--->数据库就会发生变化
# 如果项目每次启动都去初始化数据库就保证了数据库每一次都是新的--->就会去覆盖用户的操作(导致数据丢失)

# 配置项目启动是否要初始化数据库
# 一共有三个值
# always:表示每一次项目启动都会去加载设置好的SQL文件，去初始化数据库
# never:项目启动不再去初始化数据库
# embedded:初始化的是内存数据库(redis,mongoDB,Hbase...),不初始化关系型数据库
#spring.datasource.initialization-mode=never